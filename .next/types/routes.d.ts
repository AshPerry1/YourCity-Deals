// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin" | "/admin/accounting" | "/admin/analytics" | "/admin/books" | "/admin/books/[id]/branding" | "/admin/books/add" | "/admin/books/edit/[id]" | "/admin/books/new" | "/admin/books/preview/[id]" | "/admin/businesses" | "/admin/businesses/[id]/branding" | "/admin/businesses/new" | "/admin/payouts" | "/admin/referrals" | "/admin/schools" | "/admin/schools/[id]/edit" | "/admin/schools/new" | "/admin/settings" | "/admin/students" | "/admin/students/[id]" | "/admin/students/add" | "/admin/students/edit/[id]" | "/admin/students/new" | "/admin/targeting" | "/books/[id]/preview" | "/login" | "/merchant" | "/merchant/verify" | "/parent" | "/purchase" | "/purchaser" | "/purchaser/books/[id]" | "/purchaser/offers/[id]" | "/quick-signup" | "/ref/[code]" | "/signup" | "/stripe-test" | "/student" | "/student/books" | "/student/books/[id]" | "/student/dashboard" | "/student/leaderboard" | "/student/profile" | "/student/referrals" | "/student/sales" | "/student/support" | "/success"
type AppRouteHandlerRoutes = "/api/accounting/record-event" | "/api/auth/confirm" | "/api/auth/verify" | "/api/books/[id]/update-price" | "/api/books/create" | "/api/checkout" | "/api/payouts" | "/api/payouts/receipt" | "/api/redeem" | "/api/referrals/generate" | "/api/referrals/track" | "/api/stripe/webhook" | "/api/targeting/grant" | "/api/tutorials/complete" | "/api/tutorials/status" | "/api/verify"
type PageRoutes = never
type LayoutRoutes = "/" | "/admin" | "/student"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/admin/accounting": {}
  "/admin/analytics": {}
  "/admin/books": {}
  "/admin/books/[id]/branding": { "id": string; }
  "/admin/books/add": {}
  "/admin/books/edit/[id]": { "id": string; }
  "/admin/books/new": {}
  "/admin/books/preview/[id]": { "id": string; }
  "/admin/businesses": {}
  "/admin/businesses/[id]/branding": { "id": string; }
  "/admin/businesses/new": {}
  "/admin/payouts": {}
  "/admin/referrals": {}
  "/admin/schools": {}
  "/admin/schools/[id]/edit": { "id": string; }
  "/admin/schools/new": {}
  "/admin/settings": {}
  "/admin/students": {}
  "/admin/students/[id]": { "id": string; }
  "/admin/students/add": {}
  "/admin/students/edit/[id]": { "id": string; }
  "/admin/students/new": {}
  "/admin/targeting": {}
  "/api/accounting/record-event": {}
  "/api/auth/confirm": {}
  "/api/auth/verify": {}
  "/api/books/[id]/update-price": { "id": string; }
  "/api/books/create": {}
  "/api/checkout": {}
  "/api/payouts": {}
  "/api/payouts/receipt": {}
  "/api/redeem": {}
  "/api/referrals/generate": {}
  "/api/referrals/track": {}
  "/api/stripe/webhook": {}
  "/api/targeting/grant": {}
  "/api/tutorials/complete": {}
  "/api/tutorials/status": {}
  "/api/verify": {}
  "/books/[id]/preview": { "id": string; }
  "/login": {}
  "/merchant": {}
  "/merchant/verify": {}
  "/parent": {}
  "/purchase": {}
  "/purchaser": {}
  "/purchaser/books/[id]": { "id": string; }
  "/purchaser/offers/[id]": { "id": string; }
  "/quick-signup": {}
  "/ref/[code]": { "code": string; }
  "/signup": {}
  "/stripe-test": {}
  "/student": {}
  "/student/books": {}
  "/student/books/[id]": { "id": string; }
  "/student/dashboard": {}
  "/student/leaderboard": {}
  "/student/profile": {}
  "/student/referrals": {}
  "/student/sales": {}
  "/student/support": {}
  "/success": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/admin": never
  "/student": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
